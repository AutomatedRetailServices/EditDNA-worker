name: Build image & deploy worker to VM

on:
  push:
    branches: [ main ]
    paths:
      - "Dockerfile.worker"
      - "jobs.py"
      - "tasks.py"
      - "s3_utils.py"
      - "captions.py"
      - "requirements.txt"
      - "start_worker.sh"
      - ".github/workflows/deploy-vm.yml"
  workflow_dispatch: {}

jobs:
  build-and-push:
    name: Build worker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/editdna-worker
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.worker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-vm:
    name: Pull image & restart worker on VM
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: SSH into VM and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: ${{ secrets.VM_SSH_PORT }}
          script: |
            set -euo pipefail
            IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/editdna-worker:latest"

            # repo path (use one that exists)
            if [ -d "$HOME/editdna" ]; then
              REPO="$HOME/editdna"
            elif [ -d "/opt/editdna" ]; then
              REPO="/opt/editdna"
            else
              echo "Repo folder not found (expected ~/editdna or /opt/editdna)"; exit 1
            fi

            cd "$REPO"
            git fetch --all
            git reset --hard origin/main

            # pull latest image and restart worker with our script
            if command -v docker >/dev/null 2>&1; then
              docker pull "$IMAGE" || true
            fi

            chmod +x start_worker.sh
            IMAGE="$IMAGE" ./start_worker.sh
